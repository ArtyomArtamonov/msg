version: "3.9"
services:
  msg:
    build:
      dockerfile: Dockerfile
      context: .
      target: api_debug
    ports:
      - 50051:50051
      - 2345:2345
    security_opt:
      - "seccomp:unconfined"
    depends_on:
      - database
      - rabbitmq
    restart: unless-stopped
    volumes:
      - .:/app
    networks:
      - backend
  
  msg-message:
    build:
      dockerfile: Dockerfile
      context: .
      target: message_debug
    ports:
      - 50052:50052
      - 2346:2346
    security_opt:
      - "seccomp:unconfined"
    depends_on:
      - database
      - rabbitmq
    restart: unless-stopped
    volumes:
      - .:/app
    networks:
      - backend
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rmqdata:/var/lib/rabbitmq/
      - rmqlogs:/var/log/rabbitmq
    networks:
      - backend
    environment:
    - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}

  database:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - backend

  migrate:
    image: migrate/migrate
    networks:
      - backend
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?sslmode=disable", "up"]
    links: 
      - database
      
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
    postgres:
    pgadmin:
    rmqdata:
    rmqlogs:
